@startuml modelo_conceptual
!define ENTITY entity
!define PRIMARY_KEY(x) <u>x</u>
!define FOREIGN_KEY(x) <i>x</i>

skinparam backgroundColor #FFFFFE
skinparam entity {
    BackgroundColor #E8F4FD
    BorderColor #4A90E2
}

title Modelo Conceptual COMPLETAMENTE Sin Bucles - Plataforma de Barberías

' === ENTIDADES INDEPENDIENTES DE AUTENTICACIÓN ===
ENTITY Usuario {
    PRIMARY_KEY(id_usuario)
    --
    email
    contraseña
    fecha_registro
    estado
}
note right of Usuario
  Solo para autenticación
  Sin relaciones con otras
  entidades operativas
end note

ENTITY Rol {
    PRIMARY_KEY(id_rol)
    --
    nombre_rol
    descripcion
}

' === ENTIDADES OPERATIVAS INDEPENDIENTES ===
ENTITY Cliente {
    PRIMARY_KEY(id_cliente)
    --
    email_cliente
    nombre
    apellido
    telefono
    preferencias
    fecha_primera_visita
}
note right of Cliente
  Entidad independiente
  Sin relación con Usuario
end note

ENTITY AdministradorBarberia {
    PRIMARY_KEY(id_admin_barberia)
    --
    email_admin
    nombre
    apellido
    telefono
    nivel_acceso
}
note right of AdministradorBarberia
  Entidad independiente
  Sin relación con Usuario
end note

ENTITY PersonalBarbero {
    PRIMARY_KEY(id_personal_barbero)
    --
    email_barbero
    nombre
    apellido
    telefono
    dni
}
note right of PersonalBarbero
  Entidad independiente
  Sin relación con Usuario
end note

' === MAPEO DE AUTENTICACIÓN (TABLA PUENTE) ===
ENTITY MapeoAutenticacion {
    PRIMARY_KEY(id_mapeo)
    --
    FOREIGN_KEY(id_usuario)
    tipo_entidad
    id_entidad
}
note right of MapeoAutenticacion
  Tabla puente que mapea
  usuarios a entidades
  Sin crear bucles
  tipo_entidad: 'cliente'|'admin'|'barbero'
  id_entidad: id correspondiente
end note

' === ENTIDADES DE BARBERÍA ===
ENTITY Barberia {
    PRIMARY_KEY(id_barberia)
    --
    FOREIGN_KEY(id_admin_barberia)
    nombre
    descripcion
    direccion
    telefono
    email
    horario_apertura
    horario_cierre
    estado
    fecha_registro
    logo_url
    banner_url
    tema_interfaz
}

ENTITY Barbero {
    PRIMARY_KEY(id_barbero)
    --
    FOREIGN_KEY(id_personal_barbero)
    FOREIGN_KEY(id_barberia)
    codigo_empleado
    especialidad
    experiencia_años
    foto_url
    biografia
    estado
}

ENTITY Servicio {
    PRIMARY_KEY(id_servicio)
    --
    FOREIGN_KEY(id_barberia)
    nombre
    descripcion
    duracion_minutos
    precio
    estado
}

' === ASIGNACIONES Y RESERVAS ===
ENTITY AsignacionBarberoServicio {
    PRIMARY_KEY(id_asignacion)
    --
    FOREIGN_KEY(id_barbero)
    FOREIGN_KEY(id_servicio)
    disponible
}

ENTITY Reserva {
    PRIMARY_KEY(id_reserva)
    --
    FOREIGN_KEY(id_cliente)
    FOREIGN_KEY(id_asignacion)
    fecha_hora
    estado
    notas
    precio_final
    fecha_creacion
}

ENTITY Calificacion {
    PRIMARY_KEY(id_calificacion)
    --
    FOREIGN_KEY(id_reserva)
    puntuacion_servicio
    puntuacion_barbero
    puntuacion_barberia
    comentario
    fecha
}

ENTITY Promocion {
    PRIMARY_KEY(id_promocion)
    --
    FOREIGN_KEY(id_barberia)
    titulo
    descripcion
    descuento_porcentaje
    fecha_inicio
    fecha_fin
    estado
}

ENTITY HorarioBarbero {
    PRIMARY_KEY(id_horario)
    --
    FOREIGN_KEY(id_barbero)
    dia_semana
    hora_inicio
    hora_fin
    disponible
}

ENTITY LogSistema {
    PRIMARY_KEY(id_log)
    --
    tipo_usuario
    id_tipo_usuario
    tipo_evento
    descripcion
    ip_direccion
    timestamp
}
note right of LogSistema
  Logs polimórficos
  sin FK directa
end note

ENTITY Suscripcion {
    PRIMARY_KEY(id_suscripcion)
    --
    FOREIGN_KEY(id_barberia)
    tipo_plan
    fecha_inicio
    fecha_fin
    estado
    monto
}

' === RELACIONES COMPLETAMENTE SIN BUCLES ===

' Autenticación (aislada)
Usuario ||--o{ Rol : tiene
Usuario ||--o{ MapeoAutenticacion : mapea_a

' Administración de barbería
AdministradorBarberia ||--o{ Barberia : administra

' Personal y barbería  
PersonalBarbero ||--o{ Barbero : trabaja_como

' Estructura de barbería
Barberia ||--o{ Barbero : emplea
Barberia ||--o{ Servicio : ofrece
Barberia ||--o{ Promocion : publica
Barberia ||--|| Suscripcion : tiene

' Asignaciones y disponibilidad
Barbero ||--o{ AsignacionBarberoServicio : tiene_asignado
Servicio ||--o{ AsignacionBarberoServicio : es_asignado
Barbero ||--o{ HorarioBarbero : tiene_horario

' Reservas (sin camino de vuelta a Usuario)
Cliente ||--o{ Reserva : realiza
AsignacionBarberoServicio ||--o{ Reserva : define_servicio
Reserva ||--|| Calificacion : genera

note bottom
  **VERIFICACIÓN DE NO-BUCLES:**
  ✓ Usuario está aislado (solo autenticación)
  ✓ Cliente → Reserva → Asignación → Barbero → PersonalBarbero (sin retorno)
  ✓ AdministradorBarberia → Barberia → Barbero → PersonalBarbero (sin retorno)
  ✓ No hay camino de PersonalBarbero a Usuario
  ✓ No hay camino de Cliente a Usuario
  ✓ No hay camino de AdministradorBarberia a Usuario
end note

@enduml